<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxxx.supermarket.dao.CustomerReturnListMapper">
  <resultMap id="BaseResultMap" type="com.xxxx.supermarket.entity.CustomerReturnList">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="amount_paid" jdbcType="REAL" property="amountPaid" />
    <result column="amount_payable" jdbcType="REAL" property="amountPayable" />
    <result column="customer_return_date" jdbcType="TIMESTAMP" property="customerReturnDate" />
    <result column="customer_return_number" jdbcType="VARCHAR" property="customerReturnNumber" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, amount_paid, amount_payable, customer_return_date, customer_return_number, remarks, 
    state, user_id, customer_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_customer_return_list
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!--通过退货单号查询所有对应的退货记录-->
    <select id="queryCustomerReturnListByCustomerReturnNumber"
            resultType="com.xxxx.supermarket.entity.CustomerReturnList">
      select * from t_customer_return_list where customer_return_number = #{customerReturnNumber}
    </select>
  <!--根据query参数获取对应的退货单-->
  <select id="querySaleListByParams" resultType="com.xxxx.supermarket.entity.CustomerReturnList">
    SELECT
    tcrl.*,
    u.user_name AS userName,
    c.NAME AS customerName
    FROM
    t_customer_return_list tcrl
    LEFT JOIN t_user u ON tcrl.user_id = u.id
    LEFT JOIN t_customer c ON tcrl.customer_id = c.id
    <where>
      <if test="null !=customerReturnNumber and customerReturnNumber !='' ">
        tcrl.customer_return_number like concat('%',#{customerReturnNumber},'%')
      </if>
      <if test="null !=customerId">
        and tcrl.customer_id=#{customerId}
      </if>
      <if test="null !=state">
        and tcrl.state = #{state}
      </if>
      <if test="null != startDate and startDate !='' ">
        and sale_date &gt;= #{startDate}
      </if>
      <if test="null !=endDate and endDate !='' ">
        and sale_date &lt;= #{endDate}
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_customer_return_list
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <!--根据id删除记录-->
  <delete id="deleteById">
    delete from t_customer_return_list
    where id = #{id,jdbcType=INTEGER}
  </delete>


  <insert id="insert" parameterType="com.xxxx.supermarket.entity.CustomerReturnList">
    insert into t_customer_return_list (id, amount_paid, amount_payable, 
      customer_return_date, customer_return_number, 
      remarks, state, user_id, 
      customer_id)
    values (#{id,jdbcType=INTEGER}, #{amountPaid,jdbcType=REAL}, #{amountPayable,jdbcType=REAL}, 
      #{customerReturnDate,jdbcType=TIMESTAMP}, #{customerReturnNumber,jdbcType=VARCHAR}, 
      #{remarks,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{customerId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xxxx.supermarket.entity.CustomerReturnList">
    insert into t_customer_return_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="amountPaid != null">
        amount_paid,
      </if>
      <if test="amountPayable != null">
        amount_payable,
      </if>
      <if test="customerReturnDate != null">
        customer_return_date,
      </if>
      <if test="customerReturnNumber != null">
        customer_return_number,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="amountPaid != null">
        #{amountPaid,jdbcType=REAL},
      </if>
      <if test="amountPayable != null">
        #{amountPayable,jdbcType=REAL},
      </if>
      <if test="customerReturnDate != null">
        #{customerReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="customerReturnNumber != null">
        #{customerReturnNumber,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.supermarket.entity.CustomerReturnList">
    update t_customer_return_list
    <set>
      <if test="amountPaid != null">
        amount_paid = #{amountPaid,jdbcType=REAL},
      </if>
      <if test="amountPayable != null">
        amount_payable = #{amountPayable,jdbcType=REAL},
      </if>
      <if test="customerReturnDate != null">
        customer_return_date = #{customerReturnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="customerReturnNumber != null">
        customer_return_number = #{customerReturnNumber,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.supermarket.entity.CustomerReturnList">
    update t_customer_return_list
    set amount_paid = #{amountPaid,jdbcType=REAL},
      amount_payable = #{amountPayable,jdbcType=REAL},
      customer_return_date = #{customerReturnDate,jdbcType=TIMESTAMP},
      customer_return_number = #{customerReturnNumber,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>