<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxxx.supermarket.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.xxxx.supermarket.entity.Customer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
  </resultMap>
  <sql id="Base_Column_List">
    id, address, contact, name, number, remarks, is_del
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xxxx.supermarket.entity.Customer">
    insert into t_customer (id, address, contact, 
      name, number, remarks, 
      is_del)
    values (#{id,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xxxx.supermarket.entity.Customer">
    insert into t_customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.supermarket.entity.Customer">
    update t_customer
    <set>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.supermarket.entity.Customer">
    update t_customer
    set address = #{address,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByParams" parameterType="com.xxxx.supermarket.query.QueryCustomer" resultType="com.xxxx.supermarket.entity.Customer">
    select
    <include refid="Base_Column_List"></include>
    from
    t_customer
    <where>
      <if test="null!=name and name!=''">
        and name like concat ('%','#{name}','%')
      </if>
      <if test="null!=contact">
        and contact = #{contact}
      </if>
      <if test="null!=address">
        and address = #{address}
      </if>
      <if test="null!=number">
        and number = #{number}
      </if>
    </where>
  </select>
</mapper>